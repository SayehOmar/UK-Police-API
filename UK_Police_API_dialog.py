# -*- coding: utf-8 -*-
"""
/***************************************************************************
 UK_Police_APIDialog
                                 A QGIS plugin
 This plugin connect Qgis to UK Police API
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2024-08-24
        git sha              : $Format:%H$
        copyright            : (C) 2024 by Sayeh Omar 
        email                : sayehomar@gmail.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os
from qgis.PyQt import uic
from qgis.PyQt import QtWidgets

# This loads your .ui file so that PyQt can populate your plugin with the elements from Qt Designer
FORM_CLASS, _ = uic.loadUiType(
    os.path.join(os.path.dirname(__file__), "UK Police API_dialog_base.ui")
)


class UK_Police_APIDialog(QtWidgets.QDialog, FORM_CLASS):
    def __init__(self, parent=None):
        """Constructor."""
        super(UK_Police_APIDialog, self).__init__(parent)
        # Set up the user interface from Designer through FORM_CLASS.
        # After self.setupUi() you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect
        self.setupUi(self)

    def get_end_date(self):
        """Fetch the date from the QDateEdit widget."""
        end_date_widget = self.findChild(QtWidgets.QDateEdit, "EndDate")
        if end_date_widget:
            # Retrieve the selected date from the widget
            selected_date = end_date_widget.date()
            # Convert to string if needed
            return selected_date.toString("MM/yyyy")  # Format as YYYY-MM-DD
        else:
            raise Exception("QDateEdit widget 'EndDate' not found.")

    def on_confirm_button_clicked(self):
        """Slot method called when the ConfirmBtn is pressed."""
        end_date = self.get_end_date()
        print(f"End date: {end_date}")


# Example usage
if __name__ == "__main__":
    app = QtWidgets.QApplication([])
    dialog = UK_Police_APIDialog()
    dialog.show()
    end_date = dialog.get_end_date()
    print(f"End date: {end_date}")
    app.exec_()
